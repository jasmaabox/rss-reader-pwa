// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Xml from "./Xml.bs.js";
import * as Caml_array from "rescript/lib/es6/caml_array.js";
import * as Caml_exceptions from "rescript/lib/es6/caml_exceptions.js";

var BadFormat = /* @__PURE__ */Caml_exceptions.create("Rss.BadFormat");

function parseContent(targetTag, nodes) {
  var res = nodes.find(function (node) {
        return node._0 === targetTag;
      });
  if (res !== undefined) {
    if (res.TAG === /* Leaf */0) {
      throw {
            RE_EXN_ID: BadFormat,
            _1: "node has incorrect type",
            Error: new Error()
          };
    }
    var data = res._1;
    if (data.length !== 0) {
      var match = Caml_array.get(data, 0);
      if (match.TAG === /* Leaf */0) {
        switch (match._0) {
          case "#cdata-section" :
          case "#text" :
              break;
          default:
            throw {
                  RE_EXN_ID: BadFormat,
                  _1: "content incorrectly structured",
                  Error: new Error()
                };
        }
        var data$1 = match._1;
        if (data$1 !== undefined) {
          return data$1;
        }
        throw {
              RE_EXN_ID: BadFormat,
              _1: "content incorrectly structured",
              Error: new Error()
            };
      }
      throw {
            RE_EXN_ID: BadFormat,
            _1: "content incorrectly structured",
            Error: new Error()
          };
    }
    throw {
          RE_EXN_ID: BadFormat,
          _1: "missing content child",
          Error: new Error()
        };
  }
  throw {
        RE_EXN_ID: BadFormat,
        _1: "tag not found",
        Error: new Error()
      };
}

function parsePosts(nodes) {
  var itemNodes = nodes.filter(function (node) {
        return node._0 === "item";
      });
  return itemNodes.map(function (node) {
              if (node.TAG === /* Leaf */0) {
                throw {
                      RE_EXN_ID: BadFormat,
                      _1: "item has incorrect node type",
                      Error: new Error()
                    };
              }
              if (node._0 === "item") {
                var data = node._1;
                return {
                        title: parseContent("title", data),
                        description: parseContent("description", data),
                        pubDate: parseContent("pubDate", data),
                        link: parseContent("link", data),
                        guid: parseContent("guid", data)
                      };
              }
              throw {
                    RE_EXN_ID: BadFormat,
                    _1: "item has incorrect node type",
                    Error: new Error()
                  };
            });
}

function parseFeed(text) {
  var match = Xml.parse(text);
  if (match.TAG === /* Leaf */0) {
    throw {
          RE_EXN_ID: BadFormat,
          _1: "missing #document tag",
          Error: new Error()
        };
  }
  if (match._0 === "#document") {
    var data = match._1;
    if (data.length !== 0) {
      var match$1 = Caml_array.get(data, 0);
      if (match$1.TAG === /* Leaf */0) {
        throw {
              RE_EXN_ID: BadFormat,
              _1: "missing rss tag",
              Error: new Error()
            };
      }
      if (match$1._0 === "rss") {
        var data$1 = match$1._1;
        if (data$1.length !== 0) {
          var match$2 = Caml_array.get(data$1, 0);
          if (match$2.TAG === /* Leaf */0) {
            throw {
                  RE_EXN_ID: BadFormat,
                  _1: "missing channel tag",
                  Error: new Error()
                };
          }
          if (match$2._0 === "channel") {
            var data$2 = match$2._1;
            return {
                    title: parseContent("title", data$2),
                    link: parseContent("link", data$2),
                    description: parseContent("description", data$2),
                    posts: parsePosts(data$2)
                  };
          }
          throw {
                RE_EXN_ID: BadFormat,
                _1: "missing channel tag",
                Error: new Error()
              };
        }
        throw {
              RE_EXN_ID: BadFormat,
              _1: "missing children in rss",
              Error: new Error()
            };
      }
      throw {
            RE_EXN_ID: BadFormat,
            _1: "missing rss tag",
            Error: new Error()
          };
    }
    throw {
          RE_EXN_ID: BadFormat,
          _1: "missing children in #document",
          Error: new Error()
        };
  }
  throw {
        RE_EXN_ID: BadFormat,
        _1: "missing #document tag",
        Error: new Error()
      };
}

export {
  BadFormat ,
  parseContent ,
  parsePosts ,
  parseFeed ,
  
}
/* No side effect */
